{% extends 'convergine-contentbuddy/_layouts/_settings' %}
{% do view.registerAssetBundle("convergine\\contentbuddy\\assets\\BuddyAssets") %}
{% import '_includes/forms' as forms %}

{% set title = 'Settings' %}
{% set selectedSubnavItem = 'settings' %}

{% set fullPageForm = true %}

{% block content %}
    {{ craft.contentbuddy.checkLicense()|raw }}
    <input type="hidden" name="action" value="convergine-contentbuddy/settings/save-settings">
    {% namespace 'settings' %}
        {{ forms.selectField({
            label: 'AI Service'|t('convergine-contentbuddy'),
            name: 'translationAi',
            value: settings.translationAi,
            options: {
                "openai": "OpenAI",
                "xai": "xAI",
                "deepl": "DeepL"
            },
            toggle: true
        }) }}

        <div id="openai" class="{% if settings.translationAi != 'openai' %}hidden{% endif %}">
            {{ forms.selectField({
                label: 'OpenAI Preferred Model'|t('convergine-contentbuddy'),
                name: 'preferredTranslationModel',
                value: settings.preferredTranslationModel,
                instructions: 'modelDescription'|t('convergine-contentbuddy'),
                options: [
                    { optgroup: "GPT Models" },
                    { value: "gpt-4.5-preview", label: "gpt-4.5-preview" },
                    { value: "gpt-4o", label: "gpt-4o" },
                    { value: "gpt-4o-mini", label: "gpt-4o-mini" },
                    { value: "gpt-4-turbo", label: "gpt-4-turbo" },
                    { value: "gpt-4", label: "gpt-4" },
                    { value: "gpt-3.5-turbo", label: "gpt-3.5-turbo" },

                    { optgroup: "Reasoning Models" },
                    { value: "o1", label: "o1" },
                    { value: "o3-mini", label: "o3-mini" }
                ]
            }) }}

            {% if settings.apiToken %}
                {{ forms.selectField({
                    label: 'OpenAI Assistant'|t('convergine-contentbuddy'),
                    name: 'openAiAssistantId',
                    value: settings.openAiAssistantId,
                    instructions: 'assistantDescription'|t('convergine-contentbuddy'),
                    options: assistants
                }) }}
            {% else %}
            <div  class="field" >
                <div class="heading">
                    <label >{{ 'OpenAI Assistant'|t('convergine-contentbuddy') }}</label>
                </div>
                <div class="instructions">
                    <p>{{ 'Before select Assistant, need save access token.'|t('convergine-contentbuddy') }}</p>
                </div>
            </div>
            {% endif %}

            {{ forms.autosuggestField({
                label: 'API: Access Token'|t('convergine-contentbuddy'),
                name: 'apiToken',
                value: settings.apiToken,
                instructions: 'Access token for the ChatGPT API'|t('convergine-contentbuddy'),
                suggestEnvVars: true,
            }) }}
        </div>

        <div id="xai" class="{% if settings.translationAi != 'xai' %}hidden{% endif %}">
            {{ forms.selectField({
                label: 'xAI Preferred Model'|t('convergine-contentbuddy'),
                name: 'xAiModel',
                value: settings.xAiModel,
                instructions: 'xAiModelDescription'|t('convergine-contentbuddy'),
                options: {
                    "grok-3": "grok-3",
                    "grok-3-fast": "grok-3-fast",
                    "grok-2-vision": "grok-2-vision",
                    "grok-2": "grok-2",
                    "grok-vision-beta": "grok-vision-beta",
                    "grok-beta": "grok-beta",
                }
            }) }}

            {{ forms.autosuggestField({
                label: 'xAI API Key'|t('convergine-contentbuddy'),
                name: 'xAiApiKey',
                value: settings.xAiApiKey,
                instructions: 'API Key for the xAI API'|t('convergine-contentbuddy'),
                suggestEnvVars: true,
            }) }}
        </div>

        <div id="deepl" class="{% if settings.translationAi != 'deepl' %}hidden{% endif %}">
            {{ forms.selectField({
                label: 'DeepL API Version'|t('convergine-contentbuddy'),
                name: 'deepLApiVersion',
                value: settings.deepLApiVersion,
                instructions: 'deepLApiVersionDescription'|t('convergine-contentbuddy'),
                options: {
                    "v2": "v2",
                    "v1": "v1",
                }
            }) }}

            {{ forms.autosuggestField({
                label: 'DeepL API Key'|t('convergine-contentbuddy'),
                name: 'deepLApiKey',
                value: settings.deepLApiKey,
                instructions: 'API Key for the DeepL API'|t('convergine-contentbuddy'),
                suggestEnvVars: true,
            }) }}

            {% set glossaryOptions = {
                '': 'None'
            } %}

            {% if settings.deepLGlossaryId is not empty %}
                {% set glossaryOptions = glossaryOptions|merge({
                    (settings.deepLGlossaryId): settings.deepLGlossaryId
                }) %}
            {% endif %}

            <div id="deepLGlossaryField" style="display: none;">
                {{ forms.selectField({
                    label: 'DeepL Glossary'|t('convergine-contentbuddy'),
                    name: 'deepLGlossaryId',
                    value: settings.deepLGlossaryId,
                    instructions: 'deepLGlossaryIdDescription'|t('convergine-contentbuddy'),
                    options: glossaryOptions
                }) }}
            </div>
        </div>

        {{ forms.lightswitchField({
            label: 'Translate Slugs'|t('convergine-contentbuddy'),
            name: 'translateSlugs',
            instructions: 'If enabled, entry slugs will also be translated.'|t('convergine-contentbuddy'),
            on: settings.translateSlugs is defined and settings.translateSlugs == '1'
        }) }}

    {% endnamespace %}
{% endblock %}
